// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "06/27/2019 11:01:19"
                                                                                
// Verilog Test Bench template for design : top
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module top_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg [1:0] OutMode;
reg [31:0] PWMDuty;
reg SwitchMicroadd;
reg SwitchMicrosub;
reg SwitchNanoadd;
reg SwitchNanosub;
reg Switchadd;
reg Switchsub;
reg clk;
reg phaseadd;
reg phasesub;
reg reset;
// wires                                               
wire [15:0]  SignalOut;

// assign statements (if any)                          
top i1 (
// port map - connection between master ports and signals/registers   
	.OutMode(OutMode),
	.PWMDuty(PWMDuty),
	.SignalOut(SignalOut),
	.SwitchMicroadd(SwitchMicroadd),
	.SwitchMicrosub(SwitchMicrosub),
	.SwitchNanoadd(SwitchNanoadd),
	.SwitchNanosub(SwitchNanosub),
	.Switchadd(Switchadd),
	.Switchsub(Switchsub),
	.clk(clk),
	.phaseadd(phaseadd),
	.phasesub(phasesub),
	.reset(reset)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin 
clk=0;                         
PWMDuty=32'd3221225472;
OutMode=2'b01;
SwitchMicroadd=1;
SwitchMicrosub=1;
SwitchNanoadd=1;
SwitchNanosub=1;
Switchadd=1;
Switchsub=1;
reset=1;
phaseadd=1;
phasesub=1;
// --> end                                             
$display("Running testbench");                       
end                                                    

always #1 clk=~clk;
                                               
endmodule

